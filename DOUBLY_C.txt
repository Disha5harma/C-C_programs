#include<iostream.h>
#include<conio.h>
struct node
{	int data;
	node* prev;
	node* next;
}*start,*temp,*curr;
void create_first(int data)
{       temp=new node;
	temp->data=data;
	if(start==NULL)
	{	start=temp;
		start->next=temp;
		start->prev=temp;
	}
}
void insert_beg(int data)
{	if(start==NULL)
	{	create_first(data);
		return;
	}
	temp=new node;
	temp->data=data;
	temp->prev=start->prev;
	start->prev->next=temp;
	start->prev=temp;
	temp->next=start;
	start=temp;

}
void insert_end(int data)
{	if(start==NULL)
	{	create_first(data);
		return;
	}
	temp=new node;
	temp->data=data;
	temp->next=start;
	temp->prev=start->next;
	start->prev->next=temp;
	start->prev=temp;
}
void insert_pos(int pos,int data)
{	if(pos==0)
	{	insert_beg(data);
		return;
	}
	int x=0;
	curr=start;
	temp=new node;
	temp->data=data;
	while(x<pos)
	{	curr=curr->next;
		x++;
	}
	temp->next=curr->next;
	temp->prev=curr;
	curr->next->prev=temp;
	curr->next=temp;
}
void delete_beg()
{       if(start->next==start)
	{	start=NULL;
		return;
	}
	start->prev->next=start->next;
	start->next->prev=start->prev;
	cout<<start->data<<" is deleted";
	curr=start->next;
	delete(start);
	start=curr;
}
void delete_end()
{       if(start->next==start)
	{	start=NULL;
		return;
	}
	curr=start->prev;
	start->prev->prev->next=start;
	start->prev=start->prev->prev;
	cout<<curr->data<<" is deleted";
	delete(curr);
}
void delete_pos(int pos)
{       if(start->next==start)
	{	start=NULL;
		return;
	}
	if(pos==0)
	{	delete_beg();
		return;
	}
	int x=0;
	curr=start;
	while(x<pos)
	{	curr=curr->next;
		x++;
	}
	temp=curr->next;
	curr->next->next->prev=curr;
	curr->next=curr->next->next;
	cout<<curr->next->data<<" is deleted";
	delete(temp);
}
void transverse()
{       curr=start;
	do
	{	cout<<curr->data<<" ";
		curr=curr->next;
	}while(curr!=start);
}
void reverse()
{	node* pre=temp->prev;
	node* next=NULL;
	temp=start->prev;
	curr=temp;
	do
	{       start=temp->next;
		next=temp->next;
		temp->next=pre;
		temp->prev=next;
		pre=temp;
		temp=next;

	}while(temp!=curr);
	temp->next=pre;
	start=temp;
}
void main()
{	int choice,data,pos;
	char ch='y';
	while(ch=='y'||ch=='Y')
	{	cout<<"\nEnter the choice\n1.Insert at beginning\n2.Delete from beginning\n3.Delete from end\n4.Delete by postion\n5.Insert at position\n6.Insert at the end\n7.Transverse\n8.Reverse\n";
		cin>>choice;
		cout<<"start"<<start->data<<"\n";
		cout<<"end"<<start->prev->data<<"\n";
		switch(choice)
		{	case 1: cout<<"\nEnter the data";
				cin>>data;
				insert_beg(data);
				break;
			case 2:delete_beg();
				break;
			case 3:delete_end();
				break;
			case 4: cout<<"\nEnter the position";
				cin>>pos;
				delete_pos(pos);
				break;
			case 5: cout<<"\nEnter the position";
				cin>>pos;
				cout<<"\nEnter the data";
				cin>>data;
				insert_pos(pos,data);
				break;
			case 6: cout<<"\nEnter the data";
				cin>>data;
				insert_end(data);
				break;
			case 7: transverse();
				break;
			case 8: reverse();
				break;
		}
		cout<<"\Do you want to perform more operations";
		cin>>ch;
	}
}
